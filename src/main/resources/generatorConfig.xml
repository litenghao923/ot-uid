<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--导入属性配置 -->
    <properties resource="generator.properties"></properties>

    <!-- 数据库驱动 -->
    <!--<classPathEntry location="${jdbc.driver.location}"/>-->
    <context id="default" targetRuntime="MyBatis3">
        <!-- 生成的Java文件的编码-->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 自动识别数据库关键字，默认false，如果设置为true，
            根据SqlReservedWords中定义的关键字列表；
            一般保留默认值，遇到数据库关键字（Java关键字），
            使用columnOverride覆盖
            -->
        <property name="autoDelimitKeywords" value="false"/>


        <!-- 格式化java代码-->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>

        <!-- 格式化XML代码-->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <!--beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>

        <property name="endingDelimiter" value="`"/>


        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="false"/>
        </commentGenerator>
        <!--数据库链接URL，用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="${jdbc.master.url}"
                        userId="${jdbc.master.username}" password="${jdbc.master.password}">
        </jdbcConnection>


        <!-- java 处理器类
            用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl
            Note: 默认会先尝试使用Integer, Long, Short等来对应DECIMAL和NUMERIC的数据类型
        -->
        <javaTypeResolver>
            <!--
            true: 使用BigDecimal对应DECIMAL 和NUMERIC数据类型
            false: 默认
                scale > 0;length > 18: 使用BigDecimal
                scale = 0;length[10,18]: 使用Long
                scale = 0;length[5,9]:  使用Integer
                scale = 0; length<5:    使用Short
            -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!-- 生成模型的包名和位置-->
        <javaModelGenerator targetPackage="com.moma.otasset.dao.domain" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!-- 生成映射文件的包名和位置-->
        <sqlMapGenerator targetPackage="com.moma.otasset.dao.mapper" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!-- 生成DAO的包名和位置-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.moma.otasset.dao.mapper"
                             targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- 要生成哪些表-->
         <table tableName="asset_change" domainObjectName="AssetChange">
             <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
         </table>
        <table tableName="asset_user" domainObjectName="AssetUser">
        <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>

    </context>
</generatorConfiguration>
